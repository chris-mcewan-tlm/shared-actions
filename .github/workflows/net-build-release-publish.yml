# Builds, Creates a release and optionally publish to NuGet
name: .NET Build, Release & Publish

on:
  workflow_call:
    inputs:
      DOTNET_VERSION:
        description: 'Enter version of .NET required, defaults to 8.0.x'
        required: false
        default: '8.0.x'
        type: string
      NUGET_ENDPOINT:
        description: 'Proget Publish API Endpoint'
        required: false
        type: string
    secrets:
      NUGET_KEY:
        required: false

jobs:
    build-release:
      runs-on: [self-hosted]
      steps:
        - name: Checkout code
          uses: actions/checkout@v2

        - name: Set up .NET
          uses: actions/setup-dotnet@v1
          with:
            dotnet-version: ${{ inputs.DOTNET_VERSION }}

        - name: Install dependencies
          run: dotnet restore

        - name: Build
          run: dotnet build --configuration Release --no-restore

        - name: Run tests
          run: dotnet test --no-restore --verbosity normal
    
        - name: release-please
          id: release
          uses: googleapis/release-please-action@v4
          with: 
            release-type: simple

        - name: Pack
          if: ${{ steps.release.outputs.release_created }}
          run: |
            if(Test-Path -Path "./nupkg") { 
              Remove-Item -Path "./nupkg" -Recurse -Force -ErrorAction SilentlyContinue 
            }          
            dotnet pack --no-build --output nupkg --configuration Release /p:Version=${{ steps.release.outputs.major }}.${{ steps.release.outputs.minor}}.${{ steps.release.outputs.patch }}

        - name: Push to NuGet
          if: ${{ steps.release.outputs.release_created }}
          run: dotnet nuget push "**/*.nupkg" --api-key ${{ secrets.NUGET_KEY }} --source ${{ inputs.NUGET_ENDPOINT }} --skip-duplicate

env:
  NUGET_ENDPOINT: ${{ inputs.NUGET_ENDPOINT }}
  NUGET_KEY: ${{ secrets.NUGET_KEY }}